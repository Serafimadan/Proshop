{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/serafima/WWW/proshop/frontend/src/screens/CartScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Form, ListGroup, Image, Button, Card } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport { addToCart } from '../actions/cartActions';\n\nconst CartScreen = ({\n  match,\n  location,\n  history\n}) => {\n  _s();\n\n  const productId = match.params.id;\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, [dispatch, productId, qty]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Cart\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartScreen, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = CartScreen;\nexport default CartScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartScreen\");","map":{"version":3,"sources":["/Users/serafima/WWW/proshop/frontend/src/screens/CartScreen.js"],"names":["React","useEffect","Link","Row","Col","Form","ListGroup","Image","Button","Card","useDispatch","useSelector","Message","addToCart","CartScreen","match","location","history","productId","params","id","qty","search","Number","split","dispatch"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,SAAzB,EAAoCC,KAApC,EAA2CC,MAA3C,EAAmDC,IAAnD,QAA+D,iBAA/D;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,SAAT,QAA0B,wBAA1B;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAD,KAAkC;AAAA;;AACjD,QAAMC,SAAS,GAAGH,KAAK,CAACI,MAAN,CAAaC,EAA/B;AACA,QAAMC,GAAG,GAAGL,QAAQ,CAACM,MAAT,GAAkBC,MAAM,CAACP,QAAQ,CAACM,MAAT,CAAgBE,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAD,CAAxB,GAA0D,CAAtE;AAGA,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGiB,SAAH,EAAc;AACVO,MAAAA,QAAQ,CAACZ,SAAS,CAACK,SAAD,EAAYG,GAAZ,CAAV,CAAR;AACH;AACJ,GAJQ,EAIN,CAACI,QAAD,EAAWP,SAAX,EAAsBG,GAAtB,CAJM,CAAT;AAOA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAnBD;;GAAMP,U;UAKeJ,W;;;KALfI,U;AAqBN,eAAeA,UAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Form, ListGroup, Image, Button, Card } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport { addToCart } from '../actions/cartActions';\n\nconst CartScreen = ({ match, location, history }) => {\n    const productId = match.params.id;\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1;\n    \n    \n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if(productId) {\n            dispatch(addToCart(productId, qty))\n        }\n    }, [dispatch, productId, qty])\n\n\n    return (\n        <div>\n            Cart\n        </div>\n    )\n}\n\nexport default CartScreen\n"]},"metadata":{},"sourceType":"module"}