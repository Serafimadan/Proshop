{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/serafima/WWW/proshop/frontend/src/screens/CartScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Form, ListGroup, Image, Button, Card } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport { addToCart } from '../actions/cartActions';\n\nconst CartScreen = ({\n  match,\n  location,\n  history\n}) => {\n  _s();\n\n  const productId = match.params.id;\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1;\n  const cart = useSelector(state => state.cart);\n  const {\n    cartItems\n  } = cart;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, [dispatch, productId, qty]);\n\n  const removeFromCartHandler = id => {};\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 8,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Shopping cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(Message, {\n        children: [\"Your cart is empty \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Go back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 71\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 43\n      }, this) : /*#__PURE__*/_jsxDEV(ListGroup, {\n        variant: \"flush\",\n        children: cartItems.map(item => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: 2,\n              children: /*#__PURE__*/_jsxDEV(Image, {\n                src: item.image,\n                alt: item.name,\n                fluid: true,\n                rounded: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/product/${item.product}`,\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 2,\n              children: [\"$ \", item.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 2,\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                value: item.qty,\n                onChange: e => dispatch(addToCart(item.product, Number(e.target.value))),\n                children: [...Array(item.countInStock).keys()].map(x => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: x + 1,\n                  children: x + 1\n                }, x + 1, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 57\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 2,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"button\",\n                variant: \"light\",\n                onClick: () => removeFromCartHandler(item.product),\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-trash\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 33\n          }, this)\n        }, item.product, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 4,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Subtotal (\", cartItems.reduce((acc, item) => acc + item.qty, 0), \") items\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this), \"$\", cartItems.reduce()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartScreen, \"O8kV4FMad4uUEER48J0xtNwHiNw=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = CartScreen;\nexport default CartScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartScreen\");","map":{"version":3,"sources":["/Users/serafima/WWW/proshop/frontend/src/screens/CartScreen.js"],"names":["React","useEffect","Link","Row","Col","Form","ListGroup","Image","Button","Card","useDispatch","useSelector","Message","addToCart","CartScreen","match","location","history","productId","params","id","qty","search","Number","split","cart","state","cartItems","dispatch","removeFromCartHandler","length","map","item","image","name","product","price","e","target","value","Array","countInStock","keys","x","reduce","acc"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,SAAzB,EAAoCC,KAApC,EAA2CC,MAA3C,EAAmDC,IAAnD,QAA+D,iBAA/D;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,SAAT,QAA0B,wBAA1B;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAD,KAAkC;AAAA;;AACjD,QAAMC,SAAS,GAAGH,KAAK,CAACI,MAAN,CAAaC,EAA/B;AACA,QAAMC,GAAG,GAAGL,QAAQ,CAACM,MAAT,GAAkBC,MAAM,CAACP,QAAQ,CAACM,MAAT,CAAgBE,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAD,CAAxB,GAA0D,CAAtE;AACA,QAAMC,IAAI,GAAGd,WAAW,CAACe,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAgBF,IAAtB;AAEA,QAAMG,QAAQ,GAAGlB,WAAW,EAA5B;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGiB,SAAH,EAAc;AACVU,MAAAA,QAAQ,CAACf,SAAS,CAACK,SAAD,EAAYG,GAAZ,CAAV,CAAR;AACH;AACJ,GAJQ,EAIN,CAACO,QAAD,EAAWV,SAAX,EAAsBG,GAAtB,CAJM,CAAT;;AAMA,QAAMQ,qBAAqB,GAAIT,EAAD,IAAQ,CAErC,CAFD;;AAIA,sBACI,QAAC,GAAD;AAAA,4BACI,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKO,SAAS,CAACG,MAAV,KAAqB,CAArB,gBAAyB,QAAC,OAAD;AAAA,uDAA4B,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,cAAzB,gBACG,QAAC,SAAD;AAAW,QAAA,OAAO,EAAC,OAAnB;AAAA,kBACKH,SAAS,CAACI,GAAV,CAAeC,IAAD,iBACX,QAAC,SAAD,CAAW,IAAX;AAAA,iCACI,QAAC,GAAD;AAAA,oCACI,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAT;AAAA,qCACI,QAAC,KAAD;AAAO,gBAAA,GAAG,EAAEA,IAAI,CAACC,KAAjB;AAAwB,gBAAA,GAAG,EAAED,IAAI,CAACE,IAAlC;AAAwC,gBAAA,KAAK,MAA7C;AAA8C,gBAAA,OAAO;AAArD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAT;AAAA,qCACI,QAAC,IAAD;AAAM,gBAAA,EAAE,EAAG,YAAWF,IAAI,CAACG,OAAQ,EAAnC;AAAA,0BAAuCH,IAAI,CAACE;AAA5C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAOI,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAT;AAAA,+BAAeF,IAAI,CAACI,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ,eAQI,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAT;AAAA,qCACI,QAAC,IAAD,CAAM,OAAN;AACQ,gBAAA,EAAE,EAAC,QADX;AAEQ,gBAAA,KAAK,EAAEJ,IAAI,CAACX,GAFpB;AAGQ,gBAAA,QAAQ,EAAGgB,CAAD,IAAOT,QAAQ,CAACf,SAAS,CAACmB,IAAI,CAACG,OAAN,EAAeZ,MAAM,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV,CAArB,CAAV,CAHjC;AAAA,0BAIa,CAAC,GAAGC,KAAK,CAACR,IAAI,CAACS,YAAN,CAAL,CAAyBC,IAAzB,EAAJ,EAAqCX,GAArC,CAA0CY,CAAD,iBACtC;AAAoB,kBAAA,KAAK,EAAEA,CAAC,GAAG,CAA/B;AAAA,4BACKA,CAAC,GAAG;AADT,mBAAaA,CAAC,GAAG,CAAjB;AAAA;AAAA;AAAA;AAAA,wBADH;AAJb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBARJ,eAoBI,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAT;AAAA,qCACI,QAAC,MAAD;AACA,gBAAA,IAAI,EAAC,QADL;AAEA,gBAAA,OAAO,EAAC,OAFR;AAGA,gBAAA,OAAO,EAAE,MAAMd,qBAAqB,CAACG,IAAI,CAACG,OAAN,CAHpC;AAAA,uCAII;AAAG,kBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBApBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,WAAqBH,IAAI,CAACG,OAA1B;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cAHR;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eA0CI,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA,6BACI,QAAC,IAAD;AAAA,+BACI,QAAC,SAAD;AAAW,UAAA,OAAO,EAAC,OAAnB;AAAA,iCACI,QAAC,SAAD,CAAW,IAAX;AAAA,oCACI;AAAA,uCAAeR,SAAS,CAACiB,MAAV,CAAiB,CAACC,GAAD,EAAMb,IAAN,KAAea,GAAG,GAAGb,IAAI,CAACX,GAA3C,EAAgD,CAAhD,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,OAEMM,SAAS,CAACiB,MAAV,EAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YA1CJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuDH,CAzED;;GAAM9B,U;UAGWH,W,EAGID,W;;;KANfI,U;AA2EN,eAAeA,UAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Form, ListGroup, Image, Button, Card } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport { addToCart } from '../actions/cartActions';\n\nconst CartScreen = ({ match, location, history }) => {\n    const productId = match.params.id;\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1;\n    const cart = useSelector(state => state.cart);\n    const { cartItems } = cart;\n    \n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if(productId) {\n            dispatch(addToCart(productId, qty))\n        }\n    }, [dispatch, productId, qty])\n\n    const removeFromCartHandler = (id) => {\n        \n    }\n\n    return (\n        <Row>\n            <Col md={8}>\n                <h1>Shopping cart</h1>\n                {cartItems.length === 0 ? <Message>Your cart is empty <Link to='/'>Go back</Link></Message> : (\n                    <ListGroup variant='flush'>\n                        {cartItems.map((item) => ( \n                            <ListGroup.Item key={item.product}>\n                                <Row>\n                                    <Col md={2}>\n                                        <Image src={item.image} alt={item.name} fluid rounded/>\n                                    </Col>\n                                    <Col md={3}>\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                    </Col>\n                                    <Col md={2}>$ {item.price}</Col>\n                                    <Col md={2}>\n                                        <Form.Control\n                                                as='select'\n                                                value={item.qty}\n                                                onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}>\n                                                    {[...Array(item.countInStock).keys()].map((x) => (\n                                                        <option key={x + 1} value={x + 1}>\n                                                            {x + 1}\n                                                        </option>\n                                                    ))}\n                                            </Form.Control>\n                                    </Col>\n                                    <Col md={2}>\n                                        <Button \n                                        type='button' \n                                        variant='light' \n                                        onClick={() => removeFromCartHandler(item.product)}>\n                                            <i className='fas fa-trash'></i>\n                                        </Button>\n                                    </Col>\n                                </Row>\n\n                            </ListGroup.Item>\n                        ))}\n                    </ListGroup>\n                )}\n            </Col>\n            <Col md={4}>\n                <Card>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\n                            ${cartItems.reduce()}\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Card>                                       \n            </Col>\n        </Row>\n    )\n}\n\nexport default CartScreen\n"]},"metadata":{},"sourceType":"module"}